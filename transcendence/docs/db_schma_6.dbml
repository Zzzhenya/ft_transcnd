// ============================================
// FT_TRANSCENDENCE - Complete Database Schema
// ============================================

// -------------------- USERS --------------------
Table Users {
  id integer [primary key, increment]
  username varchar(50) [unique, not null]
  Guest bool
  email varchar(100) [unique, not null]
  password_hash varchar(255) [note: 'bcrypt hash']
  
  // OAuth / 42 Integration
  intra_id integer [unique, note: '42 Intra User ID']
  oauth_provider varchar(20) [note: 'e.g., 42, google']
  email_verified boolean [default: false]
  
  // Profile
  display_name varchar(100)
  avatar varchar(255)
  bio text
  
  // Status
  status varchar(20) [default: 'offline', note: 'online, offline, in_game, in_queue']
  current_match_id integer
  
  // Security
  mfa_enabled boolean [default: false]
  mfa_secret varchar(255)
  mfa_backup_codes text [note: 'JSON array of backup codes']
  
  // Timestamps
  created_at timestamp [default: `now()`]
  last_login timestamp
  
  jwt varchar [note: "hash"]
  tocken varchar [note: 'hash']

  Indexes {
    username [unique]
    email [unique]
    intra_id [unique]
  }
}



// -------------------- FRIENDS --------------------
Table Friends {
  id integer [primary key, increment]
  user_id integer [not null]
  friend_id integer [not null]
  status varchar(20) [default: 'pending', note: 'pending, accepted, blocked']
  created_at timestamp [default: `now()`]
  accepted_at timestamp
  
  Indexes {
    (user_id, friend_id) [unique]
  }
}

// -------------------- BLOCKED USERS --------------------
Table Blocked_Users {
  id integer [primary key, increment]
  user_id integer [not null]
  blocked_user_id integer [not null]
  blocked_at timestamp [default: `now()`]
  
  Indexes {
    (user_id, blocked_user_id) [unique]
  }
}

// -------------------- MATCHES --------------------
Table Matches {
  id integer [primary key, increment]
  tournament_id integer [note: 'NULL = normal 1v1 match']
  
  // Tournament Info
  round integer [note: 'Tournament round number']
  match_number integer [note: 'Match number within round']
  bracket_type varchar(20) [note: 'winner, loser, placement']
  
  // Players
  player1_id integer [not null]
  player2_id integer [not null]
  
  // Results
  winner_id integer
  loser_id integer
  player1_score integer [default: 0]
  player2_score integer [default: 0]
  
  // Match Details
  status varchar(20) [default: 'waiting', note: 'waiting, in_progress, finished, cancelled']
  game_mode varchar(20) [default: 'normal', note: 'normal, ranked, custom']
  match_type varchar(20) [note: '1v1, tournament']
  duration integer [note: 'Duration in seconds']
  
  // Timestamps
  created_at timestamp [default: `now()`]
  started_at timestamp
  finished_at timestamp
  
  Indexes {
    tournament_id
    player1_id
    player2_id
    status
  }
}

// -------------------- TOURNAMENTS --------------------
Table Tournament_Singlematches {
  id integer [primary key, increment]
  name varchar(100) [not null]
  description text
  Tournament bool [note: '1 tournament; 0 - singlematch' ]
  
  status varchar(20) [default: 'registration', note: 'registration, in_progress, finished, cancelled']
  player_count integer [not null, note: '4 or 8 players']
  current_players integer [default: 0]
  
  winner_id integer
  winner_username varchar
  
  created_at timestamp [default: `now()`]
  started_at timestamp
  finished_at timestamp
}

// -------------------- TOURNAMENT PARTICIPANTS --------------------
Table Tournament_Players {
  id integer [primary key, increment]
  tournament_id integer [not null]
  user_id integer [not null]
  tournament_alias varchar(50) [not null, note: 'Display name in tournament']
  
  //placement integer [note: '1-8 final placement']
  //eliminated_in_round integer
  
  joined_at timestamp [default: `now()`]
  
  Indexes {
    (tournament_id, user_id) [unique]
  }
}

// -------------------- CHANNELS (CHAT) --------------------
Table Channels {
  id integer [primary key, increment]
  name varchar(100) [unique, not null]
  type varchar(20) [default: 'public', note: 'public, private, protected, direct']
  password_hash varchar(255) [note: 'Only for protected channels']
  
  owner_id integer [not null]
  description text
  
  created_at timestamp [default: `now()`]
  updated_at timestamp [default: `now()`]
  
  Indexes {
    name [unique]
    owner_id
  }
}

// -------------------- CHANNEL MEMBERS --------------------
Table Channel_Members {
  id integer [primary key, increment]
  channel_id integer [not null]
  user_id integer [not null]
  
  role varchar(20) [default: 'member', note: 'owner, admin, member']
  
  muted_until timestamp [note: 'NULL = not muted']
  banned boolean [default: false]
  
  joined_at timestamp [default: `now()`]
  
  Indexes {
    (channel_id, user_id) [unique]
    channel_id
    user_id
  }
}

// -------------------- MESSAGES --------------------
Table Messages {
  id integer [primary key, increment]
  channel_id integer [note: 'NULL for direct messages']
  sender_id integer [not null]
  receiver_id integer [note: 'Only for direct messages']
  
  content text [not null]
  edited boolean [default: false]
  
  created_at timestamp [default: `now()`]
  edited_at timestamp
  
  Indexes {
    channel_id
    sender_id
    receiver_id
    created_at
  }
}

// -------------------- GAME INVITATIONS --------------------
Table Game_Invitations {
  id integer [primary key, increment]
  from_user_id integer [not null]
  to_user_id integer [not null]
  
  match_id integer [note: 'Created when accepted']
  game_mode varchar(20) [default: 'normal']
  
  status varchar(20) [default: 'pending', note: 'pending, accepted, declined, expired, cancelled']
  
  created_at timestamp [default: `now()`]
  expires_at timestamp
  responded_at timestamp
  
  Indexes {
    from_user_id
    to_user_id
    status
  }
}

// -------------------- NOTIFICATIONS --------------------
Table Notifications {
  id integer [primary key, increment]
  user_id integer [not null]
  
  type varchar(30) [not null, note: 'friend_request, game_invite, tournament_start, message, achievement']
  title varchar(100)
  content text
  link varchar(255) [note: 'Link to relevant resource']
  
  read boolean [default: false]
  
  created_at timestamp [default: `now()`]
  
  Indexes {
    user_id
    read
    created_at
  }
}

// ============================================
// FOREIGN KEY RELATIONSHIPS
// ============================================

// Friends
Ref: Friends.user_id > Users.id [delete: cascade]
Ref: Friends.friend_id > Users.id [delete: cascade]

// Blocked Users
Ref: Blocked_Users.user_id > Users.id [delete: cascade]
Ref: Blocked_Users.blocked_user_id > Users.id [delete: cascade]

// Matches
Ref: Matches.tournament_id > Tournament_Singlematches.id [delete: cascade]
Ref: Matches.player1_id > Users.id
Ref: Matches.player2_id > Users.id
Ref: Matches.winner_id > Users.id
Ref: Matches.loser_id > Users.id
Ref: Users.current_match_id > Matches.id

// Tournaments
Ref: Tournament_Singlematches.winner_id > Users.id
Ref: Tournament_Players.tournament_id > Tournament_Singlematches.id [delete: cascade]
Ref: Tournament_Players.user_id > Users.id

// Chat
Ref: Channels.owner_id > Users.id
Ref: Channel_Members.channel_id > Channels.id [delete: cascade]
Ref: Channel_Members.user_id > Users.id [delete: cascade]
Ref: Messages.channel_id > Channels.id [delete: cascade]
Ref: Messages.sender_id > Users.id
Ref: Messages.receiver_id > Users.id

// Game Invitations
Ref: Game_Invitations.from_user_id > Users.id [delete: cascade]
Ref: Game_Invitations.to_user_id > Users.id [delete: cascade]
Ref: Game_Invitations.match_id > Matches.id

// Notifications
Ref: Notifications.user_id > Users.id [delete: cascade]