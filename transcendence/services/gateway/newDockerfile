FROM node:18-alpine AS base
WORKDIR /app
RUN apk add --no-cache curl
# COPY package*.json tsconfig.json ./
# RUN npm install
COPY . .



# RUN npm run build
# CMD ["npm", "run", "dev"]

# FROM base AS production
# RUN npm install
# COPY . .
# RUN npm run build
# CMD ["npm", "run", "start"]

# Stage 1: Build Stage
# FROM node:20-alpine AS builder

# WORKDIR /usr/src/app

# COPY package*.json tsconfig.json ./
# RUN npm install

# COPY . .

# RUN npm run build

# Stage 2: Runtime Stage
FROM node:18-alpine AS runtime

WORKDIR /app

COPY package*.json ./
RUN npm install --production
RUN apk add --no-cache curl
COPY --from=base /app/dist ./dist

# If in dev, run ts-node-dev; else run compiled JS
CMD sh -c '\
  if [ "$NODE_ENV" = "development" ]; then \
    npm install -g ts-node-dev && ts-node-dev --respawn --transpile-only src/index.ts; \
  else \
    npm run start; \
  fi'

