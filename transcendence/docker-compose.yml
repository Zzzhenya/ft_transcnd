services:
  gateway:
    build: ./services/gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - USER_SERVICE_URL=http://user-service:3001
      - GAME_SERVICE_URL=http://game-service:3002
      - LOG_SERVICE_URL=http://log-service:3003
    depends_on:
      - user-service
      - game-service
      - log-service
      - database
    volumes:
      - ./shared:/app/shared

  user-service:
    build: ./services/user-service
    # ports:
    #   - "3001:3001"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=sqlite:/app/shared/database/transcendence.db
      - JWT_SECRET=your-secret-key-change-in-production
    depends_on:
      - database
    volumes:
      - ./shared:/app/shared

  game-service:
    build: ./services/game-service
    # ports:
    #   - "3002:3002"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=sqlite:/app/shared/database/transcendence.db
      - USER_SERVICE_URL=http://user-service:3001
    depends_on:
      - database
    volumes:
      - ./shared:/app/shared

  log-service:
    build: ./services/log-service
    # ports:
    #   - "3003:3003"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=sqlite:/app/shared/database/transcendence.db
    volumes:
      - ./shared:/app/shared
      - ./monitoring:/app/monitoring

  tournament-service:
    build: ./services/tournament-service
    # ports:
    #   - "3005:3005"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=sqlite:/app/shared/database/transcendence.db
      - USER_SERVICE_URL=http://user-service:3005
      - GAME_SERVICE_URL=http://game-service:3002
    depends_on:
      - database
    volumes:
      - ./shared:/app/shared

  frontend:
    build: ./frontend
    ports:
      - "3004:3004"  # Docker frontend on port 3004
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:3000

  # database:
  #   image: alpine:latest
  #   command: sh -c "mkdir -p /shared/database && touch /shared/database/transcendence.db && tail -f /dev/null"
  #   volumes:
  #     - shared-data:/shared

  # database:
  #   image: node:18-alpine
  #   working_dir: /app/shared
  #   command: sh -c "npm install && npm run db:init && tail -f /dev/null"
  #   volumes:
  #     - ./shared:/app/shared
  #   environment:
  #     - NODE_ENV=development

  database:
    image: node:18-alpine
    working_dir: /app/shared
    command: >
      sh -c "
      echo '🔧 Setting up database permissions...' &&
      mkdir -p database &&
      chmod 777 database &&
      echo '📦 Installing dependencies...' &&
      npm install &&
      echo '🗄️ Initializing database...' &&
      npm run db:init &&
      echo '✅ Setting final permissions...' &&
      chmod 666 database/transcendence.db 2>/dev/null || true &&
      chmod 666 database/transcendence.db-journal 2>/dev/null || true &&
      echo '📊 Final permissions:' &&
      ls -la database/ &&
      tail -f /dev/null
      "
    volumes:
      - ./shared:/app/shared
    environment:
      - NODE_ENV=development

  health-checker:
    image: curlimages/curl
    volumes:
      - ./health-check.sh:/health-check.sh
    entrypoint: ["sh", "/health-check.sh"]

  sqlite-web:
    image: coleifer/sqlite-web
    container_name: sqlite-web
    restart: unless-stopped
    ports:
      - "8082:8080"
    volumes:
      - ./shared:/app/shared
    command: ["sqlite_web", "/app/shared/database/transcendence.db", "--host", "0.0.0.0", "--port", "8080"]
    depends_on:
      - database
    labels:
      - "com.transcendence.description=SQLite Web Admin Interface"

# volumes:
#   shared-data:

networks:
  default:
    name: transcendence-network
