services:
  gateway:
    #Original
    #build: ./services/gateway
    ## Add from this line
    build:
      context: ./services/gateway
      target: production
    command: ["npm","start"] # Not dev but start for executing
    ## to thin line
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - USER_SERVICE_URL=http://user-service:3001
      - GAME_SERVICE_URL=http://game-service:3002
      - LOG_SERVICE_URL=http://log-service:3003
    depends_on:
      - user-service
      - game-service
      - log-service
      - database
    volumes:
      - shared-data:/app/shared

  user-service:
    build: ./services/user-service
    # ports:
    #   - "3001:3001"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=sqlite:/app/shared/database/transcendence.db
      - JWT_SECRET=your-secret-key-change-in-production
    depends_on:
      - database
    volumes:
      - shared-data:/app/shared

  game-service:
    build: ./services/game-service
    # ports:
    #   - "3002:3002"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=sqlite:/app/shared/database/transcendence.db
      - USER_SERVICE_URL=http://user-service:3001
    depends_on:
      - database
    volumes:
      - shared-data:/app/shared

  log-service:
    build: ./services/log-service
    # ports:
    #   - "3003:3003"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=sqlite:/app/shared/database/transcendence.db
    volumes:
      - shared-data:/app/shared
      - ./monitoring:/app/monitoring

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: transcendence-elasticsearch
    profiles: ["monitoring", "full"]  # Optional service
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"  # Reduced memory usage
      - bootstrap.memory_lock=true
      - cluster.routing.allocation.disk.threshold_enabled=false
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=30s || exit 1"]
      interval: 20s
      timeout: 15s
      retries: 8
      start_period: 60s  # Give more time to start

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: transcendence-kibana
    profiles: ["monitoring", "full"]  # Optional service
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - SERVER_PUBLICBASEURL=http://localhost:5601
      # Disable heavy features for faster startup
      - XPACK_SECURITY_ENABLED=false
      - XPACK_MONITORING_ENABLED=false
      - XPACK_WATCHER_ENABLED=false
      - XPACK_GRAPH_ENABLED=false
      - XPACK_REPORTING_ENABLED=false
      - XPACK_ML_ENABLED=false
      - KIBANA_PLUGINS_DISABLED=ml,apm,uptime,infra,canvas,monitoring,graph
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy  # Wait for Elasticsearch to be healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5601/login || curl -f http://localhost:5601/api/status || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 60s  # Reduced start period

  tournament-service:
    build: ./services/tournament-service
    # ports:
    #   - "3005:3005"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=sqlite:/app/shared/database/transcendence.db
      - USER_SERVICE_URL=http://user-service:3001 # ERROR fixed: 3005 -> 3001
      - GAME_SERVICE_URL=http://game-service:3002
    depends_on:
      - database
    volumes:
      - shared-data:/app/shared

  frontend:
    build: ./frontend
    ports:
      - "3004:3004"  # Docker frontend on port 3004
    environment:
      - NODE_ENV=development
      #- REACT_APP_API_URL=http://localhost:3000 // We don't use REACT

  database:
    image: alpine:latest
    command: sh -c "mkdir -p /shared/database && touch /shared/database/transcendence.db && tail -f /dev/null"
    volumes:
      - shared-data:/shared

  health-checker:
    image: curlimages/curl
    volumes:
      - ./health-check.sh:/health-check.sh
    entrypoint: ["sh", "/health-check.sh"]

volumes:
  shared-data:
  elasticsearch-data:

networks:
  default:
    name: transcendence-network
